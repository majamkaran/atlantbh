{
	"info": {
		"_postman_id": "8fe62071-fdab-482d-8e23-89e9dcfb2003",
		"name": "Smoke Suite",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26554707",
		"_collection_link": "https://atlantbh.postman.co/workspace/Atlantbh~2314c3b6-9623-4731-9d33-fbfdbe025d45/collection/26554707-8fe62071-fdab-482d-8e23-89e9dcfb2003?action=share&source=collection_link&creator=26554707"
	},
	"item": [
		{
			"name": "POST-Create User with valid credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"User first name validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user.firstName).to.eql(\"Test\");\r",
							"});\r",
							"\r",
							"pm.environment.set(\"userToken\", pm.response.json().token);\r",
							"\r",
							"pm.environment.set(\"userId\", pm.response.json().user._id);\r",
							"pm.environment.set(\"userEmail\", pm.response.json().user.email);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Test\",\r\n    \"lastName\": \"Tester\",\r\n    \"email\": \"majamkaran+2@gmail.com\",\r\n    \"password\": \"ABC1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST-Create new contact#1- valid credentials Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify the created contact details in the response\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody.firstName).to.equal(\"Peter\");\r",
							"    pm.expect(responseBody.lastName).to.equal(\"Smith\");\r",
							"    pm.expect(responseBody.email).to.equal(\"peters@fake.com\");\r",
							"    pm.expect(responseBody.phone).to.equal(\"8005555589\");\r",
							"    pm.expect(responseBody.street1).to.equal(\"1 Main St.\");\r",
							"    pm.expect(responseBody.city).to.equal(\"Anytown\");\r",
							"    pm.expect(responseBody.stateProvince).to.equal(\"IL\");\r",
							"    pm.expect(responseBody.postalCode).to.equal(\"34638\");\r",
							"    pm.expect(responseBody.country).to.equal(\"USA\");\r",
							"});\r",
							"pm.environment.set(\"contactId\", pm.response.json()._id);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Peter\",\r\n    \"lastName\": \"Smith\",\r\n    \"birthdate\": \"1970-10-01\",\r\n    \"email\": \"peters@fake.com\",\r\n    \"phone\": \"8005555589\",\r\n    \"street1\": \"1 Main St.\",\r\n    \"street2\": \"Apartment A\",\r\n    \"city\": \"Anytown\",\r\n    \"stateProvince\": \"IL\",\r\n    \"postalCode\": \"34638\",\r\n    \"country\": \"USA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/contacts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET-Get list of all contacts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body is an array\", function () {\r",
							"    pm.expect(pm.response.json()).to.be.an('array');\r",
							"});\r",
							"\r",
							"// Test for the response body to have all the required fields for each contact object\r",
							"pm.test(\"All contact objects have required fields\", function () {\r",
							"    pm.response.json().forEach(contact => {\r",
							"        pm.expect(contact._id).to.exist;\r",
							"        pm.expect(contact.firstName).to.exist;\r",
							"        pm.expect(contact.lastName).to.exist;\r",
							"        pm.expect(contact.birthdate).to.exist;\r",
							"        pm.expect(contact.email).to.exist;\r",
							"        pm.expect(contact.phone).to.exist;\r",
							"        pm.expect(contact.street1).to.exist;\r",
							"        pm.expect(contact.street2).to.exist;\r",
							"        pm.expect(contact.city).to.exist;\r",
							"        pm.expect(contact.stateProvince).to.exist;\r",
							"        pm.expect(contact.postalCode).to.exist;\r",
							"        pm.expect(contact.country).to.exist;\r",
							"        pm.expect(contact.owner).to.exist;\r",
							"        pm.expect(contact.__v).to.exist;\r",
							"    });\r",
							"});\r",
							"\r",
							"// Test for the Content-Type header to be present and set to \"application/json\"\r",
							"pm.test(\"Content-Type header is present and set to 'application/json'\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"// Extracting the id of the last contact from the response\r",
							"let lastContactId = pm.response.json()[pm.response.json().length - 1]._id;\r",
							"console.log(\"Id of the last conatct is: \"+lastContactId);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/contacts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET-Get contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/contacts/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"contacts",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE-Delete contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/contacts/{{contactId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"contacts",
						"{{contactId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Log In with valid credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body has user details\", function () {\r",
							"    pm.expect(pm.response.json().user).to.exist;\r",
							"    pm.expect(pm.response.json().user._id).to.be.a('string');\r",
							"    pm.expect(pm.response.json().user.firstName).to.be.a('string');\r",
							"    pm.expect(pm.response.json().user.lastName).to.be.a('string');\r",
							"    pm.expect(pm.response.json().user.email).to.be.a('string');\r",
							"    pm.expect(pm.response.json().user.__v).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"User first name validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user.firstName).to.eql(\"Test\");\r",
							"});\r",
							"pm.test(\"User last name validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user.lastName).to.eql(\"Tester\");\r",
							"});\r",
							"pm.test(\"User email validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.user.email).to.eql(\"majamkaran+2@gmail.com\");\r",
							"});\r",
							"pm.environment.set('token', pm.response.json().token);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"majamkaran+2@gmail.com\",\r\n    \"password\": \"ABC12345\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET-Get User Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"User email validation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('email');\r",
							"    pm.expect(jsonData.email).to.eql(\"majamkaran+2@gmail.com\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/me",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST-User Log Out",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/logout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"logout"
					]
				}
			},
			"response": []
		}
	]
}